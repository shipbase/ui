{
  "name": "tree-view",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/tree-view.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { TreeView as TreeViewPrimitive } from \"@ark-ui/react/tree-view\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TreeView = React.forwardRef<\n  React.ElementRef<typeof TreeViewPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TreeViewPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <TreeViewPrimitive.Root\n    ref={ref}\n    className={cn(\"w-full [--pl:0.5rem]\", className)}\n    {...props}\n  />\n))\n\nconst TreeViewContext = TreeViewPrimitive.Context\n\nconst TreeViewBranch = TreeViewPrimitive.Branch\n\nconst TreeViewBranchIndicator = TreeViewPrimitive.BranchIndicator\n\nconst TreeViewBranchText = TreeViewPrimitive.BranchText\n\nconst TreeViewItemText = TreeViewPrimitive.ItemText\n\nconst TreeViewTree = TreeViewPrimitive.Tree\n\nconst TreeViewLabel = React.forwardRef<\n  React.ElementRef<typeof TreeViewPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof TreeViewPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <TreeViewPrimitive.Label\n    ref={ref}\n    className={cn(\"font-medium text-sm leading-none\", className)}\n    {...props}\n  />\n))\n\nconst TreeViewBranchControl = React.forwardRef<\n  React.ElementRef<typeof TreeViewPrimitive.BranchControl>,\n  React.ComponentPropsWithoutRef<typeof TreeViewPrimitive.BranchControl>\n>(({ className, ...props }, ref) => (\n  <TreeViewPrimitive.BranchControl\n    ref={ref}\n    className={cn(\n      \"flex w-full items-center gap-2 rounded-md px-2 py-1 pl-[calc(var(--indent)+var(--pl))] text-primary [--indent:calc((var(--depth)-1)*1rem+(var(--depth)-1)*0.5rem)] hover:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\n\nconst TreeViewBranchContent = React.forwardRef<\n  React.ElementRef<typeof TreeViewPrimitive.BranchContent>,\n  React.ComponentPropsWithoutRef<typeof TreeViewPrimitive.BranchContent>\n>(({ className, ...props }, ref) => (\n  <TreeViewPrimitive.BranchContent\n    ref={ref}\n    className={cn(\n      \"relative [--indent:calc(var(--depth)*1rem+(var(--depth)-1)*0.5rem)] before:absolute before:left-[var(--indent)] before:h-full before:w-0.5 before:rounded before:bg-border before:content-['']\",\n      className\n    )}\n    {...props}\n  />\n))\n\nconst TreeViewItem = React.forwardRef<\n  React.ElementRef<typeof TreeViewPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof TreeViewPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <TreeViewPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"ml-[var(--indent)] flex w-full items-center gap-2 rounded-md px-2 py-1 text-primary [--indent:calc((var(--depth)-1)*1rem+(var(--depth)-1)*0.5rem)] hover:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\n\nexport {\n  TreeView,\n  TreeViewBranch,\n  TreeViewBranchContent,\n  TreeViewBranchControl,\n  TreeViewBranchIndicator,\n  TreeViewBranchText,\n  TreeViewContext,\n  TreeViewItem,\n  TreeViewItemText,\n  TreeViewLabel,\n  TreeViewTree,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}