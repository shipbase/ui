{
  "name": "pagination",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/pagination.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Pagination as PaginationPrimitive } from \"@ark-ui/react/pagination\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { type ButtonProps, buttonVariants } from \"@/components/ui/button\"\nimport { cn } from \"@/lib/utils\"\n\nconst PaginationContext = PaginationPrimitive.Context\n\nconst Pagination = React.forwardRef<\n  React.ElementRef<typeof PaginationPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof PaginationPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <PaginationPrimitive.Root\n    className={cn(\n      \"mx-auto flex w-full flex-row items-center justify-center gap-1\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nPagination.displayName = PaginationPrimitive.Root.displayName\n\nconst PaginationItem = React.forwardRef<\n  React.ElementRef<typeof PaginationPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof PaginationPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <PaginationContext>\n    {(context) => (\n      <PaginationPrimitive.Item\n        className={cn(\n          buttonVariants({\n            variant: context.page === props.value ? \"outline\" : \"ghost\",\n            size: \"icon\",\n          }),\n          className\n        )}\n        {...props}\n        ref={ref}\n      />\n    )}\n  </PaginationContext>\n))\nPaginationItem.displayName = PaginationPrimitive.Item.displayName\n\nconst PaginationPrevTrigger = React.forwardRef<\n  React.ElementRef<typeof PaginationPrimitive.PrevTrigger>,\n  React.ComponentPropsWithoutRef<typeof PaginationPrimitive.PrevTrigger> &\n    Pick<ButtonProps, \"size\">\n>(({ className, size = \"default\", ...props }, ref) => (\n  <PaginationPrimitive.PrevTrigger\n    className={cn(\n      buttonVariants({ variant: \"ghost\", size }),\n      \"gap-1 pl-2.5\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationPrimitive.PrevTrigger>\n))\nPaginationPrevTrigger.displayName = PaginationPrimitive.PrevTrigger.displayName\n\nconst PaginationNextTrigger = React.forwardRef<\n  React.ElementRef<typeof PaginationPrimitive.NextTrigger>,\n  React.ComponentPropsWithoutRef<typeof PaginationPrimitive.NextTrigger> &\n    Pick<ButtonProps, \"size\">\n>(({ className, size = \"default\", ...props }, ref) => (\n  <PaginationPrimitive.NextTrigger\n    className={cn(\n      buttonVariants({ variant: \"ghost\", size }),\n      \"gap-1 pr-2.5\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationPrimitive.NextTrigger>\n))\nPaginationNextTrigger.displayName = PaginationPrimitive.NextTrigger.displayName\n\nconst PaginationEllipsis = React.forwardRef<\n  React.ElementRef<typeof PaginationPrimitive.Ellipsis>,\n  React.ComponentPropsWithoutRef<typeof PaginationPrimitive.Ellipsis>\n>(({ className, ...props }, ref) => (\n  <PaginationPrimitive.Ellipsis\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n    ref={ref}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </PaginationPrimitive.Ellipsis>\n))\nPaginationEllipsis.displayName = PaginationPrimitive.Ellipsis.displayName\n\nexport {\n  Pagination,\n  PaginationContext,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationNextTrigger,\n  PaginationPrevTrigger,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}