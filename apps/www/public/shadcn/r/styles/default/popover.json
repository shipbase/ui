{
  "name": "popover",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/popover.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { Popover as PopoverPrimitive } from \"@ark-ui/react/popover\"\nimport { Portal } from \"@ark-ui/react/portal\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <Portal>\n    <PopoverPrimitive.Positioner>\n      <PopoverPrimitive.Content\n        ref={ref}\n        className={cn(\n          \"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 z-50 w-80 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=closed]:animate-out data-[state=open]:animate-in\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Positioner>\n  </Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nconst PopoverArrow = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Arrow>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Arrow>\n>(({ className, ...props }, ref) => (\n  <PopoverPrimitive.Arrow>\n    <PopoverPrimitive.ArrowTip\n      ref={ref}\n      className={cn(\"border-t-[1px] border-l-[1px]\", className)}\n      {...props}\n    />\n  </PopoverPrimitive.Arrow>\n))\nPopoverArrow.displayName = PopoverPrimitive.Arrow.displayName\n\nconst PopoverCloseTrigger = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.CloseTrigger>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.CloseTrigger>\n>(({ className, ...props }, ref) => (\n  <PopoverPrimitive.CloseTrigger\n    ref={ref}\n    className={cn(\n      \"absolute top-4 right-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n    <span className=\"sr-only\">Close</span>\n  </PopoverPrimitive.CloseTrigger>\n))\nPopoverCloseTrigger.displayName = PopoverPrimitive.CloseTrigger.displayName\n\nconst PopoverTitle = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <PopoverPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"font-semibold text-lg leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nPopoverTitle.displayName = PopoverPrimitive.Title.displayName\n\nconst PopoverDescription = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <PopoverPrimitive.Description\n    ref={ref}\n    className={cn(\"text-muted-foreground text-sm\", className)}\n    {...props}\n  />\n))\nPopoverDescription.displayName = PopoverPrimitive.Description.displayName\n\nexport {\n  Popover,\n  PopoverArrow,\n  PopoverCloseTrigger,\n  PopoverContent,\n  PopoverDescription,\n  PopoverTitle,\n  PopoverTrigger,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}