---
import { frameworks } from "@/atoms/framework"
import { getComponentSource } from "@/lib/source"

import CodeWrapper from "./code-wrapper/index.astro"

export interface Props {
  component: string
}
const { component } = Astro.props

const frameworkSources = await Promise.all(
  frameworks.map((framework) => getComponentSource(framework, component))
)
---

{
  frameworks.map((framework, index) => (
    <div data-framework={framework}>
      {frameworkSources?.[index]?.length ? (
        frameworkSources?.[index]?.map((src) => (
          <div data-framework={framework}>
            {typeof frameworkSources?.[index]?.length === "number" &&
            frameworkSources?.[index]?.length > 1 ? (
              <p class="mb-2">{src.filename}</p>
            ) : null}
            <CodeWrapper
              className="mt-0"
              lang={src.lang}
              src={src.source}
              collapsible
            />
          </div>
        ))
      ) : (
        <CodeWrapper src={"Not Found"} />
      )}
    </div>
  ))
}
