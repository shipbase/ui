---
import Code from "@/components/code.astro";
import { getComponentSource } from "@/lib/source";
import { uiLibraries } from "@/store/atoms/ui-library";
import CodeCollapsible from "../code-collapsible";

export interface Props {
  component: string;
}
const { component } = Astro.props;

const frameworkSources = await Promise.all(
  uiLibraries.map((uiLibrary) => getComponentSource(uiLibrary, component))
);
---

{
  uiLibraries.map((uiLibrary, index) => (
    <div data-ui-library={uiLibrary} class="mt-4" hidden>
      {frameworkSources?.[index]?.length ? (
        frameworkSources?.[index]?.map((src) => (
          <Fragment>
            {typeof frameworkSources?.[index]?.length === "number" &&
            frameworkSources?.[index]?.length > 1 ? (
              <p class="mb-2">{src.filename}</p>
            ) : null}
            <CodeCollapsible client:visible>
              <Code
                lang={src.lang}
                src={src.source}
                className="[&>pre]:pb-10"
              />
            </CodeCollapsible>
          </Fragment>
        ))
      ) : (
        <Code src={"Not Found"} />
      )}
    </div>
  ))
}
