---
import { getExampleSource } from "@/lib/source"
import { $framework, frameworks } from "@/store/atoms/framework"
import CodeWrapper from "../code-wrapper/index.astro"
import Preview from "./preview"
import PreviewVue from "./preview.vue"
import Tabs from "./tabs"
import Wrapper from "./wrapper.astro"

export interface Props {
  name: string
}
const { name } = Astro.props

const sources = await Promise.all(
  frameworks.map((framework) => getExampleSource(framework, name))
)
---

<div class="relative my-4 flex flex-col space-y-2 lg:max-w-[120ch]">
  <Tabs client:visible>
    <Fragment slot="preview">
      {
        frameworks.map((framework, index) => (
          <Wrapper
            component={name}
            source={sources[index]}
            data-framework={framework}
            hidden={$framework.value !== framework}
          >
            {framework === "react" ? (
              <Preview client:visible name={name} hidden={!sources[index]} />
            ) : framework === "vue" ? (
              <PreviewVue client:visible name={name} hidden={!sources[index]} />
            ) : null}
          </Wrapper>
        ))
      }
    </Fragment>
    <Fragment slot="code">
      {
        frameworks.map((framework, index) => (
          <div
            data-framework={framework}
            hidden={$framework.value !== framework}
          >
            <CodeWrapper
              lang={sources[index]?.lang}
              src={sources[index]?.source}
            />
          </div>
        ))
      }
    </Fragment>
  </Tabs>
</div>
