---
import { cn } from "@/lib/utils";
import { Button, type ButtonProps } from "@ui/react/button";
import { CheckIcon, ClipboardIcon } from "lucide-react";

interface Props extends ButtonProps {
  value?: string;
  className?: string;
}

const { value, className, ...props } = Astro.props as Props;
---

<Button
  size="icon"
  variant="ghost"
  className={cn(
    "copy-code-button",
    "bg-code size-7 hover:opacity-100 focus-visible:opacity-100",
    className
  )}
  data-value={value}
  {...props}
>
  <ClipboardIcon className="copy-icon" />
  <CheckIcon className="check-icon hidden" />
  <span class="sr-only">Copy</span>
</Button>

<script>
  async function copyToClipboardWithMeta(value: string) {
    navigator.clipboard.writeText(value);
  }

  document.addEventListener("astro:page-load", () => {
    const copyButton =
      document.querySelector<HTMLButtonElement>(".copy-code-button");
    if (copyButton) {
      copyButton.addEventListener("click", () => {
        copyToClipboardWithMeta(copyButton.dataset.value || "");
        const copyIcon = copyButton.querySelector(".copy-icon");
        const checkIcon = copyButton.querySelector(".check-icon");
        copyIcon?.classList.add("hidden");
        checkIcon?.classList.remove("hidden");
        setTimeout(() => {
          copyIcon?.classList.remove("hidden");
          checkIcon?.classList.add("hidden");
        }, 2000);
      });
    }
  });
</script>
